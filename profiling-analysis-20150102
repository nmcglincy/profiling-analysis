# 20150102
# WHEN I RAN THE ANALYSIS BEFORE, THE TOPHAT ALIGNMENT FAILED, AND WE WEREN'T SO SURE WHAT THE ERROR MEANT.
# NICK THOUGHT IT HAD SOMETHING TO DO WITH SHORT SEQUENCES, AND THAT REMOVING THEM AT THE FASTX-SPLIT STAGE
# WOULD FIX IT.
# 
# NICK'S EMAIL:
# Thanks for sending those along. I think we can actually blame this in part on bowtie — probably due to weird problems arising when it gets 1-base-long reads as input. 
# One possible solution would be to use the “-m/--min-insert” option I included in fastx-split to throw out stuff that’s so short as to be uninteresting in any case — I’d guess that 16 bases is a good cutoff for this, though Rachel Green does see interesting stuff that’s this size or smaller, so maybe 14 bases would be good. You would do this by adding “-m14” or “--min-insert=14” to your fastx-split run (then, sadly, re-running the bowtie against rRNA and then the TopHat).
# 
# Splitting by barcode, designate a new folder for this new split
fastx-split -o split2 -p NN -x NNNNNIIIII --min-insert=14 -s samples.csv sample_clipped.fastq
# 
# IT'S A BIT STRANGE THAT THE FATES.TXT FILE IS EXACTLY THE SAME, SHOULDN'T THERE BE MORE SHORT THINGS?
# MOVE REQUIRED ANNOTATION INTO NEW FOLDER
cp *.bt2 ../split2/
# 
# ALIGNMENT TO rRNA
cd split2
bowtie2 -p 8 --very-sensitive --quiet --un 112A_norrna.fq -x sc-rrna -U 112A.fastq | rrna-stats -o 112A_rrna --tam --maxread 51 --lenrange 24,36 - &
bowtie2 -p 8 --very-sensitive --quiet --un 112B_norrna.fq -x sc-rrna -U 112B.fastq | rrna-stats -o 112B_rrna --tam --maxread 51 --lenrange 24,36 - &
bowtie2 -p 8 --very-sensitive --quiet --un D19A_norrna.fq -x sc-rrna -U D19A.fastq | rrna-stats -o D19A_rrna --tam --maxread 51 --lenrange 24,36 - &
bowtie2 -p 8 --very-sensitive --quiet --un D19B_norrna.fq -x sc-rrna -U D19B.fastq | rrna-stats -o D19B_rrna --tam --maxread 51 --lenrange 24,36 - & 
# 
# NICK'S PREVIOUS EMAIL TO ROB AND I
# Thanks so much for checking that out.
# 
# For your reference, the rRNA fragment that showed up in Nick M's samples at high abundance is RDN25-1:739-757, which is pretty abundant in your sample too.
# 
# The other two fragments targeted for depletion are RDN25-1:2503-2528 and RDN25-1:3169-3193. The second of these is mostly absent from your sample, while the third is also present at high abundance.
# 
# I'm pulling this information mostly from the ...rrna_frags.txt file, which is derived from finding all rRNA sequences where coverage exceeds 1% of all rRNA-aligning reads in the sample and then finding a "fragment" that encompasses the region of high rRNA coverage. The columns are:
# 1. rRNA sequence name
# 2. Position of highest coverage
# 3. Range of nucleotide starting and ending positions that encompass >90% of the total coverage
# 4. Absolute number of reads mapping to the fragment site
# 5. Fraction of rRNA reads found in this fragment
# 6. Cumulative fraction of rRNA reads.
# 
# diff -q rrna_frags_report.txt ../split/split_rrna_frags_report.txt
# DIFF COMMAND PRODUCED NO OUTPUT, SO THE RESULTS OF THE RRNA MAPPING APPEAR TO BE IDENTIFICAL
# 
# TODO 20150102 - WRITE SMALL BASH SCRIPT TO CALCULATE PROPORTION OF READS NOT ALIGNING TO RRNA
# 
# ALIGNING RRNA-DEPLETED READS TO THE YEAST GENOME USING TOPHAT2
# USING A GTF BASED ON THE STEINMETZ DATA; CONSTRUCTING TWO VERSIONS - ONE USING THE ANNOTATIONS CONSISTENT WITH MORE "NORMAL" TRANSCRIPT STRUCTURE, AND ANOTHER WITH ALMOST EVERYTHING.
# 
# COPY OVER RELEVANT GTF
cp ../split/sac_cer_yassour_utr.gtf .
# 
# CONSTRUCT INDEX
nohup tophat -G sac_cer_yassour_utr.gtf --transcriptome-index=transcriptome_data/known saccharomyces_cerevisiae
# WORKED WELL
# 
# THE ACTUAL ALIGNMENTS, TRY FIRST WITHOUT THE --solexa1.3-quals 
tophat -o 112A_norrna_v_genome -p4 --no-novel-juncs -G sac_cer_yassour_utr.gtf --transcriptome-index=transcriptome_data/known -M saccharomyces_cerevisiae 112A_norrna.fq &
# 
# GOT THE SAME DISPARITY BETWEEN LONG READ AND QUALITY LENGTH THAT I DID BEFORE, TRY PUTTING IN QUALITY SCORES
tophat -o 112A_norrna_v_genome -p4 --solexa1.3-quals --no-novel-juncs -G sac_cer_yassour_utr.gtf --transcriptome-index=transcriptome_data/known -M saccharomyces_cerevisiae 112A_norrna.fq &
# GOT THE INT ERROR
tophat -o 112A_norrna_v_genome -p4 --solexa-quals --no-novel-juncs -G sac_cer_yassour_utr.gtf --transcriptome-index=transcriptome_data/known -M saccharomyces_cerevisiae 112A_norrna.fq &
# GOT THE SEQUENCE LENGTH ERROR

tophat -o 112B_norrna_v_genome -p4 --solexa1.3-quals --no-novel-juncs -G sac_cer_yassour_utr.gtf --transcriptome-index=transcriptome_data/known -M saccharomyces_cerevisiae 112B_norrna.fq &

tophat -o D19A_norrna_v_genome -p4 --solexa1.3-quals --no-novel-juncs -G sac_cer_yassour_utr.gtf --transcriptome-index=transcriptome_data/known -M saccharomyces_cerevisiae D19A_norrna.fq &

tophat -o D19B_norrna_v_genome -p4 --solexa1.3-quals --no-novel-juncs -G sac_cer_yassour_utr.gtf --transcriptome-index=transcriptome_data/known -M saccharomyces_cerevisiae D19B_norrna.fq &

# D19B read2 name didn't start with an @, but it did in the fastq prior to bowtie2 so...
# I WONDER IF RUNNING IT ON THE READS WITHOUT RRNA DEPLETION WOULD MAKE ANY DIFFERENCE

tophat -o 112A_v_genome -p4 --solexa1.3-quals --no-novel-juncs -G sac_cer_yassour_utr.gtf --transcriptome-index=transcriptome_data/known -M saccharomyces_cerevisiae 112A.fastq &

# NOPE
# [2014-12-22 17:03:45] Beginning TopHat run (v2.0.10)
# -----------------------------------------------
# [2014-12-22 17:03:45] Checking for Bowtie
# 		  Bowtie version:	 2.1.0.0
# [2014-12-22 17:03:45] Checking for Samtools
# 		Samtools version:	 0.1.19.0
# [2014-12-22 17:03:45] Checking for Bowtie index files (transcriptome)..
# [2014-12-22 17:03:45] Checking for Bowtie index files (genome)..
# [2014-12-22 17:03:45] Checking for reference FASTA file
# 	Warning: Could not find FASTA file saccharomyces_cerevisiae.fa
# [2014-12-22 17:03:45] Reconstituting reference FASTA file from Bowtie index
#   Executing: /mnt/ingolialab/linux-x86_64/bin/bowtie2-inspect saccharomyces_cerevisiae > 112A_v_genome/tmp/saccharomyces_cerevisiae.fa
# [2014-12-22 17:03:46] Generating SAM header for saccharomyces_cerevisiae
# [2014-12-22 17:03:46] Reading known junctions from GTF file
# [2014-12-22 17:03:46] Pre-filtering multi-mapped left reads
# [2014-12-22 17:03:46] Mapping 112A to genome saccharomyces_cerevisiae with Bowtie2 
# [2014-12-22 17:03:46] Preparing reads
# 	[FAILED]
# Error running 'prep_reads'
# terminate called after throwing an instance of 'int'
# 
# mcglincy@compute1:~/NINM001/Sample_NINM01_index1/split/112A_v_genome/logs$ more prep_reads.log
# prep_reads v2.0.9 (3067M)
# ---------------------------
# Saw ASCII character 61 but expected 64-based Phred qual.
# Try not specifying --solexa1.3-quals/--phred64-quals.
# terminate called after throwing an instance of 'int'

tophat -o 112A_v_genome -p4 --no-novel-juncs -G sac_cer_yassour_utr.gtf --transcriptome-index=transcriptome_data/known -M saccharomyces_cerevisiae 112A.fastq &
# THIS IS STILL THINKING...
# THIS WORKED, REPEAT FOR OTHER SAMPLES
tophat -o 112B_v_genome -p8 --no-novel-juncs -G sac_cer_yassour_utr.gtf --transcriptome-index=transcriptome_data/known -M saccharomyces_cerevisiae 112B.fastq &
tophat -o D19A_v_genome -p8 --no-novel-juncs -G sac_cer_yassour_utr.gtf --transcriptome-index=transcriptome_data/known -M saccharomyces_cerevisiae D19A.fastq &
tophat -o D19B_v_genome -p8 --no-novel-juncs -G sac_cer_yassour_utr.gtf --transcriptome-index=transcriptome_data/known -M saccharomyces_cerevisiae D19B.fastq &
# 
# BELOW POINT MIGHT BE WORTH BARING IN MIND
# 
# [2014-12-22 17:40:40] Resuming TopHat pipeline with unmapped reads
# Warning: you have only one segment per read.
# 	If the read length is greater than or equal to 45bp,
# 	we strongly recommend that you decrease --segment-length to about half the read length because TopHat will work better with multiple segments
# 
tophat -o 112A_norrna_v_genome -p4 --no-novel-juncs -G sac_cer_yassour_utr.gtf --transcriptome-index=transcriptome_data/known -M saccharomyces_cerevisiae 112A_norrna.fq &

# THIS DIDN'T WORK
# prep_reads v2.0.9 (3067M)
# ---------------------------
# Error: qual length (91) differs from seq length (90) for fastq record !

# needs bowtie1 index

# [2014-12-22 14:49:36] Beginning TopHat run (v2.0.10)
# -----------------------------------------------
# [2014-12-22 14:49:36] Checking for Bowtie
# 		  Bowtie version:	 2.1.0.0
# [2014-12-22 14:49:36] Checking for Samtools
# 		Samtools version:	 0.1.19.0
# [2014-12-22 14:49:36] Checking for Bowtie index files (transcriptome)..
# [2014-12-22 14:49:36] Checking for Bowtie index files (genome)..
# [2014-12-22 14:49:36] Checking for reference FASTA file
# 	Warning: Could not find FASTA file saccharomyces_cerevisiae.fa
# [2014-12-22 14:49:36] Reconstituting reference FASTA file from Bowtie index
#   Executing: /mnt/ingolialab/linux-x86_64/bin/bowtie2-inspect saccharomyces_cerevisiae > 112A_norrna_v_genome/tmp/saccharomyces_cerevisiae.fa
# [2014-12-22 14:49:37] Generating SAM header for saccharomyces_cerevisiae
# [2014-12-22 14:49:37] Reading known junctions from GTF file
# [2014-12-22 14:49:37] Pre-filtering multi-mapped left reads
# [2014-12-22 14:49:37] Mapping 112A_norrna to genome saccharomyces_cerevisiae with Bowtie2 
# [2014-12-22 14:49:38] Preparing reads
# 	[FAILED]
# Error running 'prep_reads'
# Error: qual length (91) differs from seq length (90) for fastq record !
# 
# 
# NICK INSTALLED A NEW VERSION OF FASTX-SPLIT. RRNA DEPLETED FILES NOW WORK WITH TOPHAT, NO READS <14 NT EVIDEN
tophat -o 112A_norrna_v_genome -p4 --no-novel-juncs -G sac_cer_yassour_utr.gtf --transcriptome-index=transcriptome_data/known -M saccharomyces_cerevisiae 112A_norrna.fq &
tophat -o 112B_norrna_v_genome -p4 --no-novel-juncs -G sac_cer_yassour_utr.gtf --transcriptome-index=transcriptome_data/known -M saccharomyces_cerevisiae 112B_norrna.fq &
tophat -o D19A_norrna_v_genome -p4 --no-novel-juncs -G sac_cer_yassour_utr.gtf --transcriptome-index=transcriptome_data/known -M saccharomyces_cerevisiae D19A_norrna.fq &
tophat -o D19B_norrna_v_genome -p4 --no-novel-juncs -G sac_cer_yassour_utr.gtf --transcriptome-index=transcriptome_data/known -M saccharomyces_cerevisiae D19B_norrna.fq &
#
# SAMTOOLS PROCESSING OUTLINED IN NATURE PROTOCOLS PAPER TO EXTRACT PERFECT-MATCH ALIGNMENTS FROM TOPHAT
samtools view -h 112A_norrna_v_genome/accepted_hits.bam | grep -E '(NM:i:0)|(^@)' | samtools view -S -b - > 112A_norrna_v_genome.bam &
samtools view -h 112B_norrna_v_genome/accepted_hits.bam | grep -E '(NM:i:0)|(^@)' | samtools view -S -b - > 112B_norrna_v_genome.bam &
samtools view -h D19A_norrna_v_genome/accepted_hits.bam | grep -E '(NM:i:0)|(^@)' | samtools view -S -b - > D19A_norrna_v_genome.bam &
samtools view -h D19B_norrna_v_genome/accepted_hits.bam | grep -E '(NM:i:0)|(^@)' | samtools view -S -b - > D19B_norrna_v_genome.bam &
# 
# INDEXED THEM AS SHINTARO DOES FOR IGV
samtools index 112A_norrna_v_genome.bam &
samtools index 112B_norrna_v_genome.bam &
samtools index D19A_norrna_v_genome.bam &
samtools index D19B_norrna_v_genome.bam &
#
# RUNNING NICK'S FP-FRAMING & FP-COUNT SCRIPTS
#
# FIRST NEED TO CONVERT MY GTF TO A BED FILE
gtf2bed < sac_cer_yassour_utr.gtf > sac_cer_yassour_utr.gtf.bed
#
# THAT'S WEIRD, DOESN'T LOOK LIKE NICK'S BED FILE - THERE'S MORE LINES, AND IT DOESN'T HAVE THE NUMBERS AT THE END.
# PROCEED WITH NICK'S sac_cer_yassour.bed; FROM NICK'S DIRECTORY:
cp sac_cer_yassour.bed /mnt/ingolialab/mcglincy/NINM001/Sample_NINM01_index1/split3
#
# RUNNING FP-FRAMING
# Preliminary reading-frame and unweighted meta-gene quality control
# 
# samtools index SAMPLE_vs_genome/accepted_hits.bam
# fp-framing -o Statistics/SAMPLE -b /PATH/TO/TRANSCRIPTOME.bed \
# SAMPLE_vs_genome/accepted_hits.bam
# 
# You’ll get a collection of 4 files:
# Statistics/SAMPLE_frame_len.txt 
# gives reading frame statistics: 
# length, 
# fraction of CDS-aligned reads at that length, 
# and then absolute read count & fraction read counts for each position.

# Statistics/SAMPLE_start_pos_len.txt and Statistics/SAMPLE_end_pos_len.txt are meta-gene tables centered on the start and stop codons. The first column is the offset relative to the start (or stop) codon, the second is the total number of reads whose 5’ end maps to that position, and the following columns are broken down per read length.
# 
# Writing an asites.txt A site offset file
# Using the fp-framing information you need to set up an A site offsets table. I use the information in the frame_len table most heavily. I’d suggest starting by assuming that the 28mer A site is about +15 and then checking which sub-codon position is most common there — if it’s the 1st (footprint fragment on 1st nucleotide of the codon) you want 15, if it’s the 2nd probably 14 and 3rd probably 16. I then do the same for all fragment lengths having at least 5% of total reads — usually 4 or 5 distinct fragment lengths — and making the A site offset bigger as needed for longer fragments or smaller for shorter.
# 
# The actual a sites file is just a tab-delimited text file with two columns: fragment length and A site offset. So it might look like
# 26	14
# 27	15
# 28	15
# 29	15
# 30	16
# 31	16
# 
# I DID THE INDEXING ALREADY, SO PROCEEDING TO FP-FRAMING
mkdir Statistics
fp-framing -o Statistics/112A_norrna_vs_genome -b sac_cer_yassour.bed 112A_norrna_v_genome.bam &
fp-framing -o Statistics/112B_norrna_vs_genome -b sac_cer_yassour.bed 112B_norrna_v_genome.bam &
fp-framing -o Statistics/D19A_norrna_vs_genome -b sac_cer_yassour.bed D19A_norrna_v_genome.bam &
fp-framing -o Statistics/D19B_norrna_vs_genome -b sac_cer_yassour.bed D19B_norrna_v_genome.bam &

# 
# 
cp sac_cer_yassour.gtf /mnt/ingolialab/mcglincy/NINM001/Sample_NINM01_index1/split3
mkdir old-gtf-alignments

cd old-gtf-alignments
nohup tophat -G sac_cer_yassour.gtf --transcriptome-index=transcriptome_data/known saccharomyces_cerevisiae
tophat -o 112A_norrna_v_genome -p4 --no-novel-juncs -G sac_cer_yassour.gtf --transcriptome-index=transcriptome_data/known -M saccharomyces_cerevisiae 112A_norrna.fq &
tophat -o 112B_norrna_v_genome -p4 --no-novel-juncs -G sac_cer_yassour.gtf --transcriptome-index=transcriptome_data/known -M saccharomyces_cerevisiae 112B_norrna.fq &
tophat -o D19A_norrna_v_genome -p4 --no-novel-juncs -G sac_cer_yassour.gtf --transcriptome-index=transcriptome_data/known -M saccharomyces_cerevisiae D19A_norrna.fq &
tophat -o D19B_norrna_v_genome -p4 --no-novel-juncs -G sac_cer_yassour.gtf --transcriptome-index=transcriptome_data/known -M saccharomyces_cerevisiae D19B_norrna.fq &
# 
# EXTRACT PERFECT MATCHES AND INDEX AS BEFORE
# RETRY FP-FRAMING
mkdir Statistics
fp-framing -o Statistics/112A_norrna_v_genome -b sac_cer_yassour.bed 112A_norrna_v_genome.bam &
fp-framing -o Statistics/112B_norrna_v_genome -b sac_cer_yassour.bed 112B_norrna_v_genome.bam &
fp-framing -o Statistics/D19A_norrna_v_genome -b sac_cer_yassour.bed D19A_norrna_v_genome.bam &
fp-framing -o Statistics/D19B_norrna_v_genome -b sac_cer_yassour.bed D19B_norrna_v_genome.bam &

# STUPID TYPO was causing it not to work, I HAD USED _v_, Nick had use _vs_ in the filenames
# 
# WORTH TALKING TO NICK ABOUT THE DEFAULTS IN TERMS OF FRAGMENT LENGTH ETC.
# 
# fp-count
# Counting reads aliging to CDSes as a measure of gene expression
# Once you have an asites.txt file you can run fp-count as so:
# fp-count -o SAMPLE_qexpr.txt -b /PATH/TO/TRANSCRIPTOME.bed -a asites.txt \
# SAMPLE_vs_genome/accepted_hits.bam

# You’ll get an output file called SAMPLE_qexpr.txt with three columns: gene name, length of the “quantified region”, and read count. The quantified region takes into account the length of the region at the start and the end of the gene that are excluded, which is 15 from the start and 5 from the end.

# Making wiggle tracks that can be viewed in genome browsers
# To make wiggle tracks (really, to make bigWig tracks) you need a table listing the sizes of all of your chromosomes. The easiest way to do this is to extract the information from your bowtie2 reference:

# bowtie2-inspect -s /PATH/TO/GENOME \
# | grep ^Sequ \
# | cut -f2,3 \
# > chr.sizes.txt

# You can check out that file and make sure that it lists each chromosome along with its length.

# Then you can generate wiggle tracks:
# wiggle-track -o SAMPLE.wig -a asites.txt SAMPLE_vs_genome/accepted_hits.bam
# and convert them to bigwig tracks:
# wigToBigWig SAMPLE_fwd.wig chr.sizes.txt SAMPLE_fwd.bw
# wigToBigWig SAMPLE_rev.wig chr.sizes.txt SAMPLE_rev.bw
fp-count -o Statistics/112A_norrna_v_genome_qexpr.txt -b sac_cer_yassour.bed -a Statistics/asites.txt 112A_norrna_v_genome.bam &

fp-count -o Statistics/112B_norrna_v_genome_qexpr.txt -b sac_cer_yassour.bed -a Statistics/asites.txt 112B_norrna_v_genome.bam &
fp-count -o Statistics/D19A_norrna_v_genome_qexpr.txt -b sac_cer_yassour.bed -a Statistics/asites.txt D19A_norrna_v_genome.bam &
fp-count -o Statistics/D19B_norrna_v_genome_qexpr.txt -b sac_cer_yassour.bed -a Statistics/asites.txt D19B_norrna_v_genome.bam &

